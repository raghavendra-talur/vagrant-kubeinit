---
- hosts: all
  gather_facts: false
  become: true
  any_errors_fatal: true
  tasks:
    - name: Install python
      raw: dnf install -y python3 libselinux-python3
    - name: Format libvirt disk
      community.general.filesystem:
        fstype: ext4
        dev: /dev/vdb
    - name: Mount libvirt disk
      ansible.posix.mount:
        path: /var/lib/libvirt
        src: /dev/vdb
        fstype: ext4
        state: mounted
    - name: Install packages
      yum:
        name:
          - libvirt
          - podman
          - qemu-kvm
          - python3-pip
          - git
          - jq
        state: latest
    - name: Set a hostname
      ansible.builtin.hostname:
        name: okdhost
    - name: Install pip modules
      pip:
        name:
          - pip
          - shyaml
          - ansible
          - netaddr
    - name: Generate ssh keys
      openssh_keypair:
          path: /root/.ssh/id_rsa
    - name: Enable passwordless ssh
      shell: "cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys"
    - name: upgrade system
      yum:
        name: "*"
        state: latest
      register: upgrade
    - name: Reboot if packages were upgraded
      shell: sleep 2 && systemctl reboot
      async: 1
      poll: 0
      when: upgrade.changed == true
    - name: Wait for host to be available after reboot
      wait_for_connection:
        delay: 15
      when: upgrade.changed == true
    - name: Enable services
      systemd:
        service: "{{ item }}"
        state: started
        enabled: true
      with_items:
        - podman
        - libvirtd
    - name: Remove swap from fstab
      lineinfile:
        name: /etc/fstab
        regexp: '\sswap\s'
        state: absent
    - name: Turn off swap
      command: swapoff -a
    - name: Git clone kubeinit
      ansible.builtin.git:
        repo: 'https://github.com/Kubeinit/kubeinit.git'
        dest: /root/kubeinit
        force: yes
    - name: Install ansible galaxy collection
      command: ansible-galaxy collection install --force -r kubeinit/requirements.yml
      args:
        chdir: /root/kubeinit
    - name: Lower ram requirements
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: 'ram=.*$'
        replace: 'ram=8388608'
    - name: Lower cpu requirements
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: '^vcpus=.*$'
        replace: 'vcpus=4'
    - name: Lower disk requirements
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: 'disk=.*$'
        replace: 'disk=20G'
    - name: Change hostname
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: 'nyctea'
        replace: 'okdhost'
    - name: Enable 3rd worker/compute node
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: '# okd-compute-03'
        replace: 'okd-compute-03'
    - name: Enable 4th worker/compute node
      ansible.builtin.replace:
        path: /root/kubeinit/hosts/okd/inventory
        regexp: '# okd-compute-04'
        replace: 'okd-compute-04'
    - name: Run the playbook
      command: ansible-playbook --user root  -v -i ./hosts/okd/inventory --become --become-user root ./playbooks/okd.yml
      args:
        chdir: /root/kubeinit
